@model ProyectoG.ViewModel.PreguntasRespuestasView

@{
    ViewBag.Title = "Edit";
}

<h2>Editar pregunta</h2>


@using (Html.BeginForm("Edit", "Preguntas", FormMethod.Post, new { @id = "frmEjecucion", @name = "frmEjecucion", @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Preguntas.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Preguntas.Id_Categoria, "Id_Categoria", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Id_Categoria", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Preguntas.Id_Categoria, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Preguntas.Id_Nivel, "Id_Nivel", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Id_Nivel", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Preguntas.Id_Nivel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Preguntas.Pregunta, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Preguntas.Pregunta, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Preguntas.Pregunta, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Preguntas.Link, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Preguntas.Link, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Preguntas.Link, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Preguntas.Privada, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Preguntas.Privada, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Preguntas.Privada, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Editar" id="Save" class="btn btn-default" />
        </div>
    </div>



    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Respuesta1.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Respuesta1.Respuesta)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Respuesta1.Respuesta_Correcta)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Respuestas)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Respuesta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(modelItem => item.Respuesta, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Respuesta_Correcta, new { htmlAttributes = new { @class = "form-control" } })

                </td>
                <td>
                    @Html.ActionLink("Editar", "EditarRespuesta", new { id = item.Id })  
                </td>
            </tr>
        }

    </table>


</div>
}

<div>
    @Html.ActionLink("Regresar a la lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
